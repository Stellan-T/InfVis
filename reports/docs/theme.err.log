Traceback (most recent call last):
  File "C:\Users\stell\miniconda3\Lib\site-packages\jupyter_core\utils\__init__.py", line 154, in wrapped
    asyncio.get_running_loop()
    ~~~~~~~~~~~~~~~~~~~~~~~~^^
RuntimeError: no running event loop

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\stell\miniconda3\Lib\site-packages\jupyter_cache\executors\utils.py", line 58, in single_nb_execution
    executenb(
    ~~~~~~~~~^
        nb,
        ^^^
    ...<4 lines>...
        **kwargs,
        ^^^^^^^^^
    )
    ^
  File "C:\Users\stell\miniconda3\Lib\site-packages\nbclient\client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\stell\miniconda3\Lib\site-packages\jupyter_core\utils\__init__.py", line 158, in wrapped
    return loop.run_until_complete(inner)
           ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\stell\miniconda3\Lib\asyncio\base_events.py", line 725, in run_until_complete
    return future.result()
           ~~~~~~~~~~~~~^^
  File "C:\Users\stell\miniconda3\Lib\site-packages\nbclient\client.py", line 709, in async_execute
    await self.async_execute_cell(
        cell, index, execution_count=self.code_cells_executed + 1
    )
  File "C:\Users\stell\miniconda3\Lib\site-packages\nbclient\client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "C:\Users\stell\miniconda3\Lib\site-packages\nbclient\client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import plotly.io as pio

if 'custom' not in pio.templates:
    transparent = 'rgba(0,0,0,0)'
    bgcolor = '#f5f5f5'  # Light gray background
    black = '#343a42'
    cyan = '#4edcda'
    darkcyan = '#2b9694'
    blue = '#4c75eb'
    darkblue = '#3a34b5'
    pink = '#ef4de5'
    purple = '#a736a0'
    red = '#f74e4e'
    darkred = '#b33c3c'
    green = '#2d8923'
    darkgreen = '#2d8923'
    orange = '#f7b24e'
    brown = '#cccccc'  # Light gray for grid lines

    pio.templates['custom'] = pio.templates['plotly']

    pio.templates['custom'].update({
        'data': {
            'bar': [
                {
                    'marker': {
                        'line': {'width': 0},
                    }
                }
            ]
        },
        'layout': {
            'paper_bgcolor': bgcolor,
            'plot_bgcolor': transparent,
            'font': {'color': black},
            'xaxis': {
                'zerolinecolor': brown,
                'gridcolor': brown,
                'zerolinewidth': 1,
            },
            'yaxis': {
                'zerolinecolor': brown,
                'gridcolor': brown,
                'zerolinewidth': 1
            },    
           'colorway': [black, 
                        cyan,     blue,     pink,   red,     green,     orange,
                        darkcyan, darkblue, purple, darkred, darkgreen],
            'title': {'x': 0.5},
            'annotationdefaults': {'arrowcolor': black},

        }
    })

    pio.templates.default = 'custom'
------------------


[31m---------------------------------------------------------------------------[39m
[31mModuleNotFoundError[39m                       Traceback (most recent call last)
[36mCell[39m[36m [39m[32mIn[1][39m[32m, line 1[39m
[32m----> [39m[32m1[39m [38;5;28;01mimport[39;00m[38;5;250m [39m[34;01mplotly[39;00m[34;01m.[39;00m[34;01mio[39;00m[38;5;250m [39m[38;5;28;01mas[39;00m[38;5;250m [39m[34;01mpio[39;00m
[32m      3[39m [38;5;28;01mif[39;00m [33m'[39m[33mcustom[39m[33m'[39m [38;5;129;01mnot[39;00m [38;5;129;01min[39;00m pio.templates:
[32m      4[39m     transparent = [33m'[39m[33mrgba(0,0,0,0)[39m[33m'[39m

[31mModuleNotFoundError[39m: No module named 'plotly'

